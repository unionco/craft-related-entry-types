{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Related Entry Types plugin for Craft CMS
 *
 * EntryType Field Settings
 *
 * @author    Abry Rath <abry.rath@union.co>
 * @copyright Copyright (c) 2019 Abry Rath <abry.rath@union.co>
 * @link      https://github.com/unionco
* @package   RelatedEntryTypes
 * @since     0.0.1
 */
#}

{% import "_includes/forms" as forms %}

{# {% do view.registerAssetBundle("unionco\\relatedentrytypes\\assetbundles\\relatedentrytypesfield\\RelatedEntryTypesFieldAsset") %} #}
{% do view.registerAssetBundle("unionco\\relatedentrytypes\\assetbundles\\cp\\CpAsset") %}

{% set sourceOptions = field.getSourceOptions() %}
{% set uid = field.uid|default('new') %}
    {% block fieldSettings %}
        <div id="vue-root"> <div data-vue-field-prefix="{{ uid }}">
            {{ forms.textField({
                name: 'test',
                disabled: true,
            }) }}
        </div>
        <ret-settings field-uid-default="{{ uid }}" section-options-json="{{ sourceOptions | json_encode }}" section-map-json="{{ field.getSectionMap() | json_encode }}" selected-sections-json="{{ (field.sections|default([]))|json_encode }}" selected-entry-types-json="{{ (field.entryTypes|default([]))|json_encode }}"/>
    </div>

    {% block limitField %}
        {% if field.allowLimit %}
            {{ forms.textField({
                label: "Limit"|t('app'),
                instructions: "Limit the number of selectable {type}."|t('app', { type: field.displayName()|lower }),
                id: 'limit',
                name: 'limit',
                value: field.limit,
                size: 2,
                errors: field.getErrors('limit')
            }) }}
        {% endif %}
    {% endblock %}

    {% block viewModeField %}
        {{ field.getViewModeFieldHtml()|raw }}
    {% endblock %}

    {% block selectionLabelField %}
        {{ forms.textField({
            label: "Selection Label"|t('app'),
            instructions: "Enter the text you want to appear on the {type} selection input."|t('app', { type: field.displayName()|lower }),
            id: 'selectionLabel',
            name: 'selectionLabel',
            value: field.selectionLabel,
            placeholder: field.defaultSelectionLabel(),
            errors: field.getErrors('selectionLabel')
        }) }}
    {% endblock %}

    {% block advancedSettings %}
        {% if craft.app.getIsMultiSite() %}
            <hr>
            <a class="fieldtoggle" data-target="advanced">{{ "Advanced"|t('app') }}</a>
            <div class="hidden" id="advanced">
                {% block targetSiteField %}
                    {{ field.getTargetSiteFieldHtml()|raw }}
                {% endblock %}

                {% block localizeRelationsField %}
                    {{ forms.checkboxField({
                        label: "Manage relations on a per-site basis"|t('app'),
                        id: 'localize-relations',
                        name: 'localizeRelations',
                        checked: field.localizeRelations
                    }) }}
                {% endblock %}
            </div>
        {% endif %}
    {% endblock %}
{% endblock %}

{% js %}
new Vue({el: '#{{ prefix }}vue-root'});
{% endjs %}
